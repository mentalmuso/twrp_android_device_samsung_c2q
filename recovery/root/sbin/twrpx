#!/sbin/sh
#####
if [ -f "/tmp/twrpx.zip" ]; then
    echo " "
else
    cp /twrpx/twrpx.zip /tmp && cd /tmp && unzip -qq twrpx.zip && chmod -R 777 ./* && cd ..
fi
. /tmp/twrpx_func.sh
#####
echo " "
echo " "
sleep 1
echo " "
echo " |=============================|"
echo " |-------|    TWRPx    |-------|"
echo " |-------| @mentalmuso |-------|"
echo " |=============================|"
echo " "
sleep 1
echo " *Choose option"
echo " 1. Mounting options"
echo " 2. Disable forced encryption"
echo " 3. Resize partitions"
echo " 4. Wipe system or vendor"
echo " 5. Debloat options"
echo " 6. Magisk options"
echo " 7. MPS_CODE/Carrier code setting"
echo " 8. Fix bluetooth/wearables"
echo " 9. EXIT"
echo " "
read category
echo " "
##### MOUNTS
if [ "$category" != "${category#[1]}" ] ;then
    echo " ---> Mounting options"
    echo " "
    echo " After mounting, and editing"
    echo " it is VERY important that system and vendor"
    echo " are UN Mounted before attempting a reboot"
    echo " "
    echo " *Choose option"
    echo " 1. Mount System RW"
    echo " 2. Mount Vendor RW"
    echo " 3. Mount System and Vendor RW"
    echo " 4. EXIT to Main menu"
    echo " "
    read mount
if [ "$mount" != "${mount#[1]}" ] ;then
    echo " ---> Mount System RW"
    echo " "
    twrpx_mount_s
fi
if [ "$mount" != "${mount#[2]}" ] ;then
    echo " ---> Mount Vendor RW"
    echo " "
    twrpx_mount_v
fi
if [ "$mount" != "${mount#[3]}" ] ;then
    echo " ---> Mount System and Vendor RW"
    echo " "
    twrpx_mount
fi
if [ "$mount" != "${mount#4]}" ] ;then
    exec sh "$0" "$@"
fi
fi
##### Disable fbe
if [ "$category" != "${category#[2]}" ] ;then
    echo " ---> Disable forced encryption"
    echo " "
    echo " This option if selected will"
    echo " disable forced encryption in vendor"
    echo " "
    echo " Proceed??? y or n"
    read enc
    if [ "$enc" != "${enc#[y]}" ] ;then
        twrpx_mount_v
        cp -f /tmp/fstab.qcom $VETC/fstab.qcom
        echo " - Encryption disabled"
        twrpx_umount_v
    fi
fi
##### Resize
if [ "$category" != "${category#[3]}" ] ;then
    echo " ---> Resize partitions"
    echo " "
    echo " This option if selected will"
    echo " resize both System and Vendor partitions"
    echo " System will be 8.9gb"
    echo " System will be 1.8gb"
    echo " "
    echo " Proceed??? y or n"
    read resize
    if [ "$resize" != "${resize#[y]}" ] ;then
        echo "twrpx=6" > $TPROP
        twrp install $TWRPXZIP
        echo " System" && sleep 1 && echo "   and" && echo "      Vendor" && sleep 1 && echo "         have" && echo "            been" && sleep 1 && echo "               ---> Resized"
    fi
fi
##### Wipe
if [ "$category" != "${category#[4]}" ] ;then
    echo " ---> Wipe system or vendor"
    echo " "
    echo " This option if selected will"
    echo " wipe both system and vendor.."
    echo " YOU MUST FLASH A ROM AFTER."
    echo " BE SURE YOU WANT TO DO THIS!!!"
    echo " "
    sleep 1
    echo " 1. Wipe System"
    echo " 2. Wipe Vendor"
    echo " 3. Wipe both System and Vendor"
    echo " 4. EXIT"
    echo " "
    read wipe
    if [ "$wipe" != "${wipe#[4]}" ] ;then
        exec sh "$0" "$@"
    fi
    echo " "
    echo "wipe=$wipe" > $TPROP
    twrpx_mount
    twrpx_wipe
    twrpx_umount
    echo " System" && sleep 1 && echo "   and/or" && echo "      Vendor" && sleep 1 && echo "         have" && echo "            been" && sleep 1 && echo "               ---> WIPED OUT"
fi
##### Debloat
if [ "$category" != "${category#[5]}" ] ;then
    echo " ---> Debloat options"
    echo " "
    echo " Whatever you pick to debloat, apks will be moved to"
    echo " a backup location for restoring if desired"
    echo " "
    sleep 1
    echo " *Choose things to debloat"
    echo " 1. General debloat (playstore apps)"
    echo " 2. Knox and other system bloat"
    echo " 3. Bixby"
    echo " 4. Edge screen"
    echo " 5. AREmoji, and kid bloaty stuff"
    echo " 6. Restore all bloat"
    echo " 7. EXIT"
    echo " "
    read debloat
    if [ "$debloat" != "${debloat#[7]}" ] ;then
        exec sh "$0" "$@"
    fi
    echo " "
    echo "debloat=$debloat" > $TPROP
    twrpx_mount
    twrpx_debloat
    twrpx_umount
    echo " Your" && sleep 1 && echo "   stuff" && echo "      has" && sleep 1 && echo "         been" && echo "            ---> debloated"
fi
##### Magisk
if [ "$category" != "${category#[6]}" ] ;then
    echo " ---> Magisk options"
    echo " "
    echo " 1. Install Magisk root"
    echo " 2. Remove all modules"
    echo " 3. Remove specific module"
    echo " "
    read magisk
    if [ "$magisk" != "${magisk#[1]}" ] ;then
        twrp install $MAGISK
        echo " "
        echo " - Magisk root installed"
    elif [ "$magisk" != "${magisk#[2]}" ] ;then
        echo " "
        rm -rf $MODULES/*
        sleep 1
        echo " All modules removed"
    elif [ "$magisk" != "${magisk#[3]}" ] ;then
        echo " "
        echo " Type the name of the module you want"
        echo " removed from the following list"
        echo " "
        sleep 1
        ls -1 $MODULES
        ls -1 $MODULES > $TPROP
        echo " "
        read module
        if grep -q "$module" $TPROP; then
            rm -rf $MODULES/$module
            sleep 1
            echo " $module removed"
        else
            echo " That module doesnt exist"
        fi
    fi
fi
##### Carrier
if [ "$category" != "${category#[7]}" ] ;then
    echo " ---> MPS_CODE/Carrier code setting"
    echo " "
    echo " This option if selected will"
    echo " change your default carrier code."
    echo " This will do nothing if the code you select"
    echo " is not in you csc partitions."
    echo " "
    echo " 1. Set carrier code"
    echo " 2. Restore original carrier code"
    echo " "
    read carrier
    echo " "
    twrpx_mount_efs
    if [ "$carrier" != "${carrier#[1]}" ] ;then
        echo " ---> Set carrier code"
        echo " "
        echo " Type in the desired carrier code"
        echo " eg. TMB or VZW etc etc"
        echo " Must be in all CAPS"
        echo " "
        read mpscode
        if [ ! -f "$BMPS" ]; then
            cp $MPS $BMPS && cp $MPS2 $BMPS2 && cp $MPS3 $BMPS3
        fi
        echo -n "$mpscode" > $MPS && echo -n "$mpscode" > $MPS2 && echo -n "$mpscode" > $MPS3
        echo " - Carrier code set"
    fi
    if [ "$carrier" != "${carrier#[2]}" ] ;then
        mv $BMPS $MPS && mv $BMPS2 $MPS2 && mv $BMPS3 $MPS3
        echo " - Carrier code restored"
    fi
    umount efs
fi
##### bt
if [ "$category" != "${category#[8]}" ] ;then
    echo " ---> Patch Bluetooth"
    echo " "
    echo " This option will patch bluetooth to"
    echo " fix issues connecting to wearables"
    echo " "
    echo " type Y to continue"
    echo " "
    read btpatch
    if [ "$btpatch" != "${btpatch#[y]}" ] ;then
        twrpx_mount_v
        cp --preserve=all /vendor/etc/vintf/manifest.xml /vendor/etc/vintf/manifest.xml.bak
        sed -i /`grep wsm /vendor/etc/vintf/manifest.xml|sed 's@/@\\\/@'|sed 's@>@\\>@g'|sed 's@<@\\<@g'|tr -d ' '`/,/'<hal format="hidl">'/d /vendor/etc/vintf/manifest.xml
    fi
    if [ "$btpatch" != "${btpatch#[Y]}" ] ;then
        twrpx_mount_v
        cp --preserve=all /vendor/etc/vintf/manifest.xml /vendor/etc/vintf/manifest.xml.bak
        sed -i /`grep wsm /vendor/etc/vintf/manifest.xml|sed 's@/@\\\/@'|sed 's@>@\\>@g'|sed 's@<@\\<@g'|tr -d ' '`/,/'<hal format="hidl">'/d /vendor/etc/vintf/manifest.xml
    fi
    echo " - Bluetooth has been patched"
fi
##### Exit
if [ "$category" != "${category#[9]}" ] ;then
    echo " "
    echo " "
    echo " - Unmounting System and Vendor for a safe reboot"
    echo " "
    sleep 1
    twrpx_umount_full2
    echo " - Seeya!"
    exit 0
fi
#
exec sh "$0" "$@"
